{"version":3,"sources":["img/col.png","img/row.png","components/ScrCtrl.js","components/Editor.js","components/EditorControl.js","components/EditorWin.js","components/Preview.js","components/PreviewControl.js","components/PreviewWin.js","components/Display.js","App.js","index.js"],"names":["ScrCtrl","props","icon","scrS","className","alt","src","row","col","id","onClick","scrCh","Editor","onChange","markCh","value","markky","EditorControl","aState","class","editCh","EditorWin","szing","scrState","bState","marked","setOptions","pedantic","gfm","breaks","renderer","Renderer","link","href","title","text","Preview","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","PreviewControl","prevCh","PreviewWin","Display","App","useState","setMarkky","React","aMaxState","setAMaxState","bMaxState","setBMaxState","screenState","setScreenState","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45dee71a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/col.73a97c79.png\";","export default __webpack_public_path__ + \"static/media/row.2bb6a182.png\";","// internal\r\n// icons\r\nimport col from '../img/col.png';\r\nimport row from '../img/row.png';\r\n\r\n// rearrangement (column or row) control\r\nconst ScrCtrl=props=>{\r\n    const icon=props.scrS?<img className=\"buttIcon\" alt=\"icon that depicts row arrangement of editor and previewer\" src={row} />:<img className=\"buttIcon\" alt=\"icon that depicts column arrangement of editor and previewer\" src={col} />;\r\n    return (\r\n        <div id=\"scrCh\">\r\n            <button id=\"scrBut\" onClick={props.scrCh}>{icon}</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrCtrl;","// markdown editor area\r\nconst Editor = props => {\r\n    return (\r\n        <textarea id=\"editor\" onChange={props.markCh} value={props.markky} />\r\n    )\r\n}\r\n\r\nexport default Editor;","// controls sizing and rearrangement of previewer and editor window\r\nconst EditorControl=props=>{\r\n    const icon=props.aState?<i class=\"fas fa-compress-arrows-alt\"></i>:<i class=\"fas fa-expand-arrows-alt\"></i>;\r\n    return (\r\n      <div id=\"editCh\">\r\n        <button id=\"editBut\" onClick={props.editCh}>{icon}</button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default EditorControl;","// internal\r\n// components\r\nimport Editor from './Editor';\r\nimport EditorControl from './EditorControl';\r\n\r\n// container for markdown editor area, and sizing control\r\nconst EditorWin=props=>{\r\n    let szing;\r\n    if (props.scrState){\r\n        if (props.aState) szing='vertiMaxEdit';\r\n        else if (props.bState) szing='vertiMinEdit';\r\n        else szing='vertiEdit';\r\n    }\r\n    else {\r\n        if (props.aState) szing='horiMaxEdit';\r\n        else if (props.bState) szing='horiMinEdit';\r\n        else szing='horiEdit';\r\n    }\r\n    return (\r\n        <div id=\"editWin\" className={szing}>\r\n            <EditorControl aState={props.aState} editCh={props.editCh}/>\r\n            <Editor markCh={props.markCh} markky={props.markky}/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditorWin;","// external\r\n// dom sanitizer\r\nimport DOMPurify from 'dompurify';\r\n// markdown converter\r\nimport marked from 'marked'; \r\n\r\n// markdown converter settings\r\nmarked.setOptions({\r\n    pedantic: false,\r\n    gfm: true,\r\n    breaks: true\r\n\r\n});\r\n\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function (href, title, text) {\r\n    return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\r\n};\r\n\r\n// given markdown, renders it into safe html\r\nconst Preview = props => {\r\n    const sanitizeNCreate = () => {\r\n        return {\r\n            __html: DOMPurify.sanitize(marked(props.markky, renderer))\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"preview\" dangerouslySetInnerHTML={sanitizeNCreate()} />\r\n\r\n    )\r\n}\r\n\r\nexport default Preview;","// controls sizing and rearrangement of previewer and editor window\r\nconst PreviewControl=props=>{\r\n    const icon=props.bState?<i class=\"fas fa-compress-arrows-alt\"></i>:<i class=\"fas fa-expand-arrows-alt\"></i>;\r\n  return (\r\n    <div id=\"prevCh\">\r\n      <button id=\"prevBut\" onClick={props.prevCh}>{icon}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PreviewControl;","// internal\r\n// components\r\nimport Preview from './Preview';\r\nimport PreviewControl from './PreviewControl';\r\n// container for markdown previewer and sizing control\r\nconst PreviewWin=props=>{\r\n    let szing;\r\n    if (props.scrState){\r\n        if (props.bState) szing='vertiMaxPrev';\r\n        else if (props.aState) szing='vertiMinPrev';\r\n        else szing='vertiPrev';\r\n    }\r\n    else {\r\n        if (props.bState) szing='horiMaxPrev';\r\n        else if (props.aState) szing='horiMinPrev';\r\n        else szing='horiPrev';\r\n    }\r\n    return (\r\n        <div id=\"prevWin\" className={szing}>\r\n            <PreviewControl prevCh={props.prevCh} bState={props.bState}/>\r\n            <Preview markky={props.markky}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PreviewWin;","// internal\r\n// components\r\nimport EditorWin from './EditorWin';\r\nimport PreviewWin from './PreviewWin';\r\n\r\n// container for both editor window and preview window\r\nconst Display=props=>{\r\n    return (\r\n        <div id=\"display\" className={!props.scrState?'horiDisplay':'vertiDisplay'}>\r\n            <EditorWin markCh={props.markCh}\r\n                       editCh={props.editCh} \r\n                       aState={props.aState} \r\n                       bState={props.bState} \r\n                       scrState={props.scrState}\r\n                       markky={props.markky}/>\r\n            <PreviewWin prevCh={props.prevCh} \r\n                        aState={props.aState} \r\n                        bState={props.bState} \r\n                        scrState={props.scrState}\r\n                        markky={props.markky}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","// external\r\n// react\r\nimport React, { useState } from 'react';\r\n\r\n// internal\r\n// components\r\nimport ScrCtrl from './components/ScrCtrl';\r\nimport Display from './components/Display';\r\n\r\nconst placeholder = `# Welcome!\r\n\r\nThis is a previewer of GitHub flavored markdown.\r\n  \r\n## Markdown\r\nWhat is **markdown** you ask?\r\n\r\nGood question! Markdown is a plain text formatting syntax, created with the belief that writing for the internet should not clutter your words with lots and lots of HTML tags.\r\n\r\nWhen writing markdown, instead of tags like &lt;em>&lt;/em> you can use simple symbols such as *, _, or ~ to tell the browser the text style you want to apply.\r\n\r\nOkay, but what is **markdown flavor**? Is that like ice cream flavors?\r\n\r\nYES! It is! and Github flavor taste just like chocolate caramel with a hint of vanilla. But it is also a specification that tells the browser how to process the special symbols.\r\n\r\n## Here you can:\r\n\r\n### render some cool markdown like \r\n * **bold** text\r\n * _italic_ text\r\n * or even have text ~~crossed out~~\r\n\r\n### Or if you have code to display, \r\nstick them between two backticks: \\`<div></div>\\`\r\nOr if the code is multi-line how about between sets of 3 backticks?\r\n\r\n\\`\\`\\`\r\nconst exampleFunction=()=>{\r\n    const coding='fun';\r\n    if (coding==='fun') return true;\r\n}\r\n\\`\\`\\`\r\n\r\n### How about:\r\n>Quoting some random guy on the internet?\r\n\r\nAfterall, we all know that:\r\n\r\n>No one on the internet lies, and therefore we should trust everything everyone says on the internet implicitly.    <div style=\"text-align: right\"> -Gengis Khan</div>\r\n\r\nOr\r\n\r\n[Link](https://www.freecodecamp.com) to your favourite website?\r\n\r\nRead up on what you can do here at [GitHub](https://guides.github.com/features/mastering-markdown/) and really go crazy!\r\n\r\n![YAY](https://upload.wikimedia.org/wikipedia/en/3/33/Patrick_Star.svg)\r\n`;\r\n\r\nconst App=()=>{\r\n    const [markky,setMarkky] =useState(placeholder);\r\n    //left side (editor)\r\n    const [aMaxState, setAMaxState]=React.useState(false);\r\n    //right side (preview)\r\n    const [bMaxState, setBMaxState]=React.useState(false);\r\n    //true=default layout, \r\n    //false=side by side\r\n    const [screenState, setScreenState]=useState(true);\r\n    //a=true edit is max icon is min\r\n    //b must be false prev is min icon is max\r\n  \r\n    //b=true prev is max icon is min\r\n    //a must be false edit is min icon is max\r\n    //!a&&b both take up half of screen \r\n    const handleMark=e=>{\r\n        setMarkky(e.target.value);\r\n    }\r\n\r\n    const handleEditCh=()=>{\r\n        setAMaxState(!aMaxState);\r\n        if (!aMaxState) setBMaxState(false);\r\n    }\r\n    const handlePrevCh=()=>{\r\n        setBMaxState(!bMaxState);\r\n        if (!bMaxState) setAMaxState(false);\r\n    }\r\n\r\n    const handleScrCh=()=>{\r\n        setScreenState(!screenState);\r\n      }\r\n    return (\r\n        <div id=\"app\">\r\n            <ScrCtrl scrCh={handleScrCh} \r\n                     scrS={screenState} />\r\n            <Display editCh={handleEditCh} \r\n                     prevCh={handlePrevCh}\r\n                     markCh={handleMark} \r\n                     aState={aMaxState} \r\n                     bState={bMaxState} \r\n                     scrState={screenState}\r\n                     markky={markky}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// external\r\n// react\r\nimport ReactDOM from 'react-dom';\r\n\r\n// internal\r\n// stylesheet\r\nimport './index.scss';\r\n// components\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}