(this["webpackJsonpmarkdown-preview"]=this["webpackJsonpmarkdown-preview"]||[]).push([[0],{12:function(t,e,a){},7:function(t,e,a){"use strict";a.r(e);var n=a(2),r=a(1),i=a.n(r),s=a(5),o=a.n(s),c=(a(12),a(6)),d=a.n(c),h=a(3),l=a.n(h),u=a(0);l.a.setOptions({pedantic:!1,gfm:!0,breaks:!0});var b=new l.a.Renderer;b.link=function(t,e,a){return'<a target="_blank" href="'.concat(t,'">').concat(a,"</a>")};var m=function(){var t=Object(r.useState)(y),e=Object(n.a)(t,2),a=e[0],s=e[1],o=i.a.useState(!1),c=Object(n.a)(o,2),d=c[0],h=c[1],l=i.a.useState(!1),b=Object(n.a)(l,2),m=b[0],j=b[1],w=Object(r.useState)(!0),p=Object(n.a)(w,2),f=p[0],x=p[1];return Object(u.jsxs)("div",{id:"app",children:[Object(u.jsx)(v,{scrCh:function(){x(!f)},scrS:f}),Object(u.jsx)(k,{editCh:function(){h(!d),d||j(!1)},prevCh:function(){j(!m),m||h(!1)},markCh:function(t){s(t.target.value)},aState:d,bState:m,scrState:f,markky:a})]})},k=function(t){return Object(u.jsxs)("div",{id:"display",className:t.scrState?"vertiDisplay":"horiDisplay",children:[Object(u.jsx)(j,{markCh:t.markCh,editCh:t.editCh,aState:t.aState,bState:t.bState,scrState:t.scrState,markky:t.markky}),Object(u.jsx)(f,{prevCh:t.prevCh,aState:t.aState,bState:t.bState,scrState:t.scrState,markky:t.markky})]})},v=function(t){var e=t.scrS?Object(u.jsx)("img",{className:"buttIcon",src:"https://raw.githubusercontent.com/MatchaCrisp/MarkdownPreview.github.io/main/src/img/row.png"}):Object(u.jsx)("img",{className:"buttIcon",src:"https://raw.githubusercontent.com/MatchaCrisp/MarkdownPreview.github.io/main/src/img/col.png"});return Object(u.jsx)("div",{id:"scrCh",children:Object(u.jsx)("button",{id:"scrBut",onClick:t.scrCh,children:e})})},j=function(t){var e;return e=t.scrState?t.aState?"vertiMaxEdit":t.bState?"vertiMinEdit":"vertiEdit":t.aState?"horiMaxEdit":t.bState?"horiMinEdit":"horiEdit",Object(u.jsxs)("div",{id:"editWin",className:e,children:[Object(u.jsx)(w,{aState:t.aState,editCh:t.editCh}),Object(u.jsx)(p,{markCh:t.markCh,markky:t.markky})]})},w=function(t){var e=t.aState?Object(u.jsx)("i",{class:"fas fa-compress-arrows-alt"}):Object(u.jsx)("i",{class:"fas fa-expand-arrows-alt"});return Object(u.jsx)("div",{id:"editCh",children:Object(u.jsx)("button",{id:"editBut",onClick:t.editCh,children:e})})},p=function(t){return Object(u.jsx)("textarea",{id:"editor",onChange:t.markCh,value:t.markky})},f=function(t){var e;return e=t.scrState?t.bState?"vertiMaxPrev":t.aState?"vertiMinPrev":"vertiPrev":t.bState?"horiMaxPrev":t.aState?"horiMinPrev":"horiPrev",Object(u.jsxs)("div",{id:"prevWin",className:e,children:[Object(u.jsx)(x,{prevCh:t.prevCh,bState:t.bState}),Object(u.jsx)(S,{markky:t.markky})]})},x=function(t){var e=t.bState?Object(u.jsx)("i",{class:"fas fa-compress-arrows-alt"}):Object(u.jsx)("i",{class:"fas fa-expand-arrows-alt"});return Object(u.jsx)("div",{id:"prevCh",children:Object(u.jsx)("button",{id:"prevBut",onClick:t.prevCh,children:e})})},S=function(t){return Object(u.jsx)("div",{id:"preview",dangerouslySetInnerHTML:{__html:d.a.sanitize(l()(t.markky,b))}})},y="# Welcome!\n\nThis is a previewer of GitHub flavored markdown.\n  \n## Markdown\nWhat is **markdown** you ask?\n\nGood question! Markdown is a plain text formatting syntax, created with the belief that writing for the internet should not clutter your words with lots and lots of HTML tags.\n\nWhen writing markdown, instead of tags like &lt;em>&lt;/em> you can use simple symbols such as *, _, or ~ to tell the browser the text style you want to apply.\n\nOkay, but what is **markdown flavor**? Is that like ice cream flavors?\n\nYES! It is! and Github flavor taste just like chocolate caramel with a hint of vanilla. But it is also a specification that tells the browser how to process the special symbols.\n\n## Here you can:\n\n### render some cool markdown like \n * **bold** text\n * _italic_ text\n * or even have text ~~crossed out~~\n\n### Or if you have code to display, \nstick them between two backticks: `<div></div>`\nOr if the code is multi-line how about between sets of 3 backticks?\n\n```\nconst exampleFunction=()=>{\n    const coding='fun';\n    if (coding==='fun') return true;\n}\n```\n\n### How about:\n>Quoting some random guy on the internet?\n\nAfterall, we all know that:\n\n>No one on the internet lies, and therefore we should trust everything everyone says on the internet implicitly.    <div style=\"text-align: right\"> -Gengis Khan</div>\n\nOr\n\n[Link](https://www.freecodecamp.com) to your favourite website?\n\nRead up on what you can do here at [GitHub](https://guides.github.com/features/mastering-markdown/) and really go crazy!\n\n![YAY](https://upload.wikimedia.org/wikipedia/en/3/33/Patrick_Star.svg)\n";o.a.render(Object(u.jsx)(m,{}),document.getElementById("root"))}},[[7,1,2]]]);
//# sourceMappingURL=main.927d3583.chunk.js.map